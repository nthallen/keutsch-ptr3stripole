-- VHDL Entity tripole_lib.tri_pulse.symbol
--
-- Created:
--          by - nort.UNKNOWN (NORT-XPS14)
--          at - 16:31:17 03/ 1/2017
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2016.1 (Build 8)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;

LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;
USE ieee.std_logic_unsigned.all;

ENTITY tri_pulse IS
  PORT( 
    ExpReset   : IN     std_logic;
    HiPerEn    : IN     std_logic;
    PhaseEn    : IN     std_logic;
    Run        : IN     std_logic;
    WData      : IN     std_logic_vector (15 DOWNTO 0);
    WrEn       : IN     std_logic;
    clk_100MHz : IN     std_logic;
    tri_start  : IN     std_logic;
    PerCount   : OUT    std_logic_vector (15 DOWNTO 0);
    PhsCount   : OUT    std_logic_vector (15 DOWNTO 0);
    pulse      : OUT    std_logic
  );

-- Declarations

END ENTITY tri_pulse ;

--
-- VHDL Architecture tripole_lib.tri_pulse.struct
--
-- Created:
--          by - nort.UNKNOWN (NORT-XPS14)
--          at - 16:31:17 03/ 1/2017
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2016.1 (Build 8)
--

-- Generation properties:
--   Component declarations : yes
--   Configurations         : embedded statements
--                          : add pragmas
--                          : exclude view name
--   
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;
USE ieee.std_logic_unsigned.all;

LIBRARY tripole_lib;

ARCHITECTURE struct OF tri_pulse IS

  -- Architecture declarations

  -- Internal signal declarations
  SIGNAL tri_phase : std_logic;

  -- Implicit buffer signal declarations
  SIGNAL PerCount_internal : std_logic_vector (15 DOWNTO 0);
  SIGNAL PhsCount_internal : std_logic_vector (15 DOWNTO 0);


  -- Component Declarations
  COMPONENT dither_wq
  PORT (
    ExpReset : IN     std_logic ;
    PerEn    : IN     std_logic ;
    WData    : IN     std_logic_vector (15 DOWNTO 0);
    WrEn     : IN     std_logic ;
    clk      : IN     std_logic ;
    Count    : OUT    std_logic_vector (15 DOWNTO 0)
  );
  END COMPONENT dither_wq;
  COMPONENT tri_hi_ctrl
  PORT (
    ExpReset   : IN     std_logic ;
    PerCount   : IN     std_logic_vector (15 DOWNTO 0);
    Run        : IN     std_logic ;
    clk_100MHz : IN     std_logic ;
    tri_phase  : IN     std_logic ;
    pulse      : OUT    std_logic 
  );
  END COMPONENT tri_hi_ctrl;
  COMPONENT tri_ph_ctrl
  PORT (
    ExpReset   : IN     std_logic ;
    PhsCount   : IN     std_logic_vector (15 DOWNTO 0);
    Run        : IN     std_logic ;
    clk_100MHz : IN     std_logic ;
    tri_start  : IN     std_logic ;
    tri_phase  : OUT    std_logic 
  );
  END COMPONENT tri_ph_ctrl;

  -- Optional embedded configurations
  -- pragma synthesis_off
  FOR ALL : dither_wq USE ENTITY tripole_lib.dither_wq;
  FOR ALL : tri_hi_ctrl USE ENTITY tripole_lib.tri_hi_ctrl;
  FOR ALL : tri_ph_ctrl USE ENTITY tripole_lib.tri_ph_ctrl;
  -- pragma synthesis_on


BEGIN

  -- Instance port mappings.
  PerSet : dither_wq
    PORT MAP (
      ExpReset => ExpReset,
      PerEn    => HiPerEn,
      WData    => WData,
      WrEn     => WrEn,
      clk      => clk_100MHz,
      Count    => PerCount_internal
    );
  PhsSet : dither_wq
    PORT MAP (
      ExpReset => ExpReset,
      PerEn    => PhaseEn,
      WData    => WData,
      WrEn     => WrEn,
      clk      => clk_100MHz,
      Count    => PhsCount_internal
    );
  hi_ctrl : tri_hi_ctrl
    PORT MAP (
      ExpReset   => ExpReset,
      PerCount   => PerCount_internal,
      Run        => Run,
      clk_100MHz => clk_100MHz,
      tri_phase  => tri_phase,
      pulse      => pulse
    );
  ph_ctrl : tri_ph_ctrl
    PORT MAP (
      ExpReset   => ExpReset,
      PhsCount   => PhsCount_internal,
      Run        => Run,
      clk_100MHz => clk_100MHz,
      tri_start  => tri_start,
      tri_phase  => tri_phase
    );

  -- Implicit buffered output assignments
  PerCount <= PerCount_internal;
  PhsCount <= PhsCount_internal;

END ARCHITECTURE struct;
