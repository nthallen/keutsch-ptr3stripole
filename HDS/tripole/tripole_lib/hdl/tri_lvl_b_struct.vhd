-- VHDL Entity tripole_lib.tri_lvl_b.symbol
--
-- Created:
--          by - nort.UNKNOWN (NORT-XPS14)
--          at - 13:48:45 03/10/2017
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2016.1 (Build 8)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;

LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY tri_lvl_b IS
  GENERIC( 
    N_INTERRUPTS : integer                       := 1;
    SW_WIDTH     : integer                       := 16;
    BUILD_NUMBER : std_logic_vector(15 DOWNTO 0) := X"0008";
    N_BOARDS     : integer                       := 8
  );
  PORT( 
    Addr        : IN     std_logic_vector (7 DOWNTO 0);
    Ctrl        : IN     std_logic_vector (6 DOWNTO 0);
    Data_o      : IN     std_logic_vector (15 DOWNTO 0);
    Ilock_rtn   : IN     std_logic;
    PSDONEB     : IN     std_logic;
    PSDONEC     : IN     std_logic;
    Switches    : IN     std_logic_vector (SW_WIDTH-1 DOWNTO 0);
    clk         : IN     std_logic;
    clkB        : IN     std_logic;
    clkC        : IN     std_logic;
    Data_i      : OUT    std_logic_vector (15 DOWNTO 0);
    Fail_Out    : OUT    std_logic_vector (0 TO 0);
    Ilock_fail  : OUT    std_logic;
    PSENB       : OUT    std_logic;
    PSENC       : OUT    std_logic;
    PSINCDECB   : OUT    std_logic;
    PSINCDECC   : OUT    std_logic;
    Status      : OUT    std_logic_vector (3 DOWNTO 0);
    tri_pulse_A : OUT    std_logic;
    tri_pulse_B : OUT    std_logic;
    tri_pulse_C : OUT    std_logic
  );

-- Declarations

END ENTITY tri_lvl_b ;

--
-- VHDL Architecture tripole_lib.tri_lvl_b.struct
--
-- Created:
--          by - nort.UNKNOWN (NORT-XPS14)
--          at - 11:10:42 03/13/2017
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2016.1 (Build 8)
--

-- Generation properties:
--   Component declarations : yes
--   Configurations         : embedded statements
--                          : add pragmas
--                          : exclude view name
--   
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;
USE ieee.std_logic_unsigned.all;

LIBRARY tripole_lib;

ARCHITECTURE struct OF tri_lvl_b IS

  -- Architecture declarations

  -- Internal signal declarations
  SIGNAL BdIntr   : std_logic_vector(N_INTERRUPTS-1 DOWNTO 0) := (others => '0');
  SIGNAL ExpAck   : std_logic_vector(N_BOARDS-1 DOWNTO 0);
  SIGNAL ExpAddr  : std_logic_vector(7 DOWNTO 0);
  SIGNAL ExpRd    : std_logic;
  SIGNAL ExpReset : std_logic;
  SIGNAL ExpWr    : std_logic;
  SIGNAL RData    : std_logic_vector(16*N_BOARDS-1 DOWNTO 0);
  SIGNAL WData    : std_logic_vector(15 DOWNTO 0);


  -- Component Declarations
  COMPONENT syscon
  GENERIC (
    BUILD_NUMBER  : std_logic_vector(15 DOWNTO 0) := X"0007";
    INSTRUMENT_ID : std_logic_vector(15 DOWNTO 0) := X"0001";
    N_INTERRUPTS  : integer range 15 downto 0     := 1;
    N_BOARDS      : integer range 15 downto 0     := 1;
    ADDR_WIDTH    : integer range 16 downto 8     := 16;
    INTA_ADDR     : std_logic_vector(15 DOWNTO 0) := X"0001";
    BDID_ADDR     : std_logic_vector(15 DOWNTO 0) := X"0002";
    FAIL_ADDR     : std_logic_vector(15 DOWNTO 0) := X"0004";
    SW_ADDR       : std_logic_vector(15 DOWNTO 0) := X"0005";
    FAIL_WIDTH    : integer range 16 downto 1     := 1;
    SW_WIDTH      : integer range 16 DOWNTO 0     := 16;
    TO_ENABLED    : boolean                       := false
  );
  PORT (
    Addr          : IN     std_logic_vector (ADDR_WIDTH-1 DOWNTO 0);
    BdIntr        : IN     std_logic_vector (N_INTERRUPTS-1 DOWNTO 0);
    Ctrl          : IN     std_logic_vector (6 DOWNTO 0);
    Data_o        : IN     std_logic_vector (15 DOWNTO 0);
    ExpAck        : IN     std_logic_vector (N_BOARDS-1 DOWNTO 0);
    RData         : IN     std_logic_vector (16*N_BOARDS-1 DOWNTO 0);
    Switches      : IN     std_logic_vector (SW_WIDTH-1 DOWNTO 0);
    clk           : IN     std_logic;
    CmdEnbl       : OUT    std_logic;
    CmdStrb       : OUT    std_logic;
    Collision     : OUT    std_logic;
    Data_i        : OUT    std_logic_vector (15 DOWNTO 0);
    ExpAddr       : OUT    std_logic_vector (ADDR_WIDTH-1 DOWNTO 0);
    ExpRd         : OUT    std_logic;
    ExpReset      : OUT    std_logic;
    ExpWr         : OUT    std_logic;
    Fail_Out      : OUT    std_logic_vector (FAIL_WIDTH-1 DOWNTO 0);
    Flt_CPU_Reset : OUT    std_logic;
    INTA          : OUT    std_logic;
    Status        : OUT    std_logic_vector (3 DOWNTO 0);
    WData         : OUT    std_logic_vector (15 DOWNTO 0)
  );
  END COMPONENT syscon;
  COMPONENT tri_lvl_c
  GENERIC (
    DELAY_BITS : integer := 7
  );
  PORT (
    ExpAddr     : IN     std_logic_vector (7 DOWNTO 0);
    ExpRd       : IN     std_logic ;
    ExpReset    : IN     std_logic ;
    ExpWr       : IN     std_logic ;
    Ilock_rtn   : IN     std_logic ;
    PSDONEB     : IN     std_logic ;
    PSDONEC     : IN     std_logic ;
    WData       : IN     std_logic_vector (15 DOWNTO 0);
    clk         : IN     std_logic ;
    clkB        : IN     std_logic ;
    clkC        : IN     std_logic ;
    ExpAck      : OUT    std_logic_vector (7 DOWNTO 0);
    IlckFail    : OUT    std_logic ;
    PSENB       : OUT    std_logic ;
    PSENC       : OUT    std_logic ;
    PSINCDECB   : OUT    std_logic ;
    PSINCDECC   : OUT    std_logic ;
    RData0      : OUT    std_logic_vector (15 DOWNTO 0);
    RData1      : OUT    std_logic_vector (15 DOWNTO 0);
    RData2      : OUT    std_logic_vector (15 DOWNTO 0);
    RData3      : OUT    std_logic_vector (15 DOWNTO 0);
    RData4      : OUT    std_logic_vector (15 DOWNTO 0);
    RData5      : OUT    std_logic_vector (15 DOWNTO 0);
    RData6      : OUT    std_logic_vector (15 DOWNTO 0);
    RData7      : OUT    std_logic_vector (15 DOWNTO 0);
    tri_pulse_A : OUT    std_logic ;
    tri_pulse_B : OUT    std_logic ;
    tri_pulse_C : OUT    std_logic 
  );
  END COMPONENT tri_lvl_c;

  -- Optional embedded configurations
  -- pragma synthesis_off
  FOR ALL : syscon USE ENTITY tripole_lib.syscon;
  FOR ALL : tri_lvl_c USE ENTITY tripole_lib.tri_lvl_c;
  -- pragma synthesis_on


BEGIN

  -- Instance port mappings.
  rf_sys : syscon
    GENERIC MAP (
      BUILD_NUMBER  => BUILD_NUMBER,
      INSTRUMENT_ID => X"0006",
      N_INTERRUPTS  => N_INTERRUPTS,
      N_BOARDS      => N_BOARDS,
      ADDR_WIDTH    => 8,
      INTA_ADDR     => X"0001",
      BDID_ADDR     => X"0002",
      FAIL_ADDR     => X"0004",
      SW_ADDR       => X"0005",
      FAIL_WIDTH    => 1,
      SW_WIDTH      => SW_WIDTH,
      TO_ENABLED    => false
    )
    PORT MAP (
      clk => clk,
      Ctrl => Ctrl,
      Addr => Addr,
      Data_i => Data_i,
      Data_o => Data_o,
      Status => Status,
      RData => RData,
      ExpAck => ExpAck,
      BdIntr => BdIntr,
      Fail_Out => Fail_Out,
      Switches => Switches,
      ExpRd => ExpRd,
      ExpWr => ExpWr,
      WData => WData,
      ExpAddr => ExpAddr,
      ExpReset => ExpReset
    );
  lvl_c : tri_lvl_c
    GENERIC MAP (
      DELAY_BITS => 7
    )
    PORT MAP (
      Ilock_rtn => Ilock_rtn,
      PSDONEB => PSDONEB,
      PSDONEC => PSDONEC,
      clk => clk,
      clkB => clkB,
      clkC => clkC,
      ExpAck => ExpAck(7 DOWNTO 0),
      IlckFail => Ilock_fail,
      PSENB => PSENB,
      PSENC => PSENC,
      PSINCDECB => PSINCDECB,
      PSINCDECC => PSINCDECC,
      RData0 => RData(0*16+15 DOWNTO 0*16),
      RData1 => RData(1*16+15 DOWNTO 1*16),
      RData2 => RData(2*16+15 DOWNTO 2*16),
      RData3 => RData(3*16+15 DOWNTO 3*16),
      RData4 => RData(4*16+15 DOWNTO 4*16),
      RData5 => RData(5*16+15 DOWNTO 5*16),
      RData6 => RData(6*16+15 DOWNTO 6*16),
      RData7 => RData(7*16+15 DOWNTO 7*16),
      tri_pulse_A => tri_pulse_A,
      tri_pulse_B => tri_pulse_B,
      tri_pulse_C => tri_pulse_C,
      ExpAddr => ExpAddr,
      ExpRd => ExpRd,
      ExpReset => ExpReset,
      ExpWr => ExpWr,
      WData => WData
    );

END ARCHITECTURE struct;
