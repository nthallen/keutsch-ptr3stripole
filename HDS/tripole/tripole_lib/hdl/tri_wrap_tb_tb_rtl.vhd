--
-- VHDL Test Bench tripole_lib.tri_wrap_tb.tri_wrap_tester
--
-- Created:
--          by - nort.UNKNOWN (NORT-XPS14)
--          at - 12:51:04 01/26/2017
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2016.1 (Build 8)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;


ENTITY tri_wrap_tb IS
END ENTITY tri_wrap_tb;


LIBRARY tripole_lib;
USE tripole_lib.ALL;


ARCHITECTURE rtl OF tri_wrap_tb IS

  -- Architecture declarations

  -- Internal signal declarations
  SIGNAL Addr        : std_logic_vector(7 DOWNTO 0);
  SIGNAL Ctrl        : std_logic_vector(6 DOWNTO 0);
  SIGNAL Data_i      : std_logic_vector(15 DOWNTO 0);
  SIGNAL Data_o      : std_logic_vector(15 DOWNTO 0);
  SIGNAL Status      : std_logic_vector(3 DOWNTO 0);
  SIGNAL Run         : std_logic;
  SIGNAL RunStatus   : std_logic;
  SIGNAL leds        : std_logic_vector(1 DOWNTO 0);
  SIGNAL tri_pulse_A : std_logic;
  SIGNAL tri_pulse_B : std_logic;
  SIGNAL tri_pulse_C : std_logic;
  SIGNAL clk         : std_logic;


  -- Component declarations
  COMPONENT tri_wrap
    PORT (
      Addr        : IN     std_logic_vector(7 DOWNTO 0);
      Ctrl        : IN     std_logic_vector(6 DOWNTO 0);
      Data_i      : OUT    std_logic_vector(15 DOWNTO 0);
      Data_o      : IN     std_logic_vector(15 DOWNTO 0);
      Status      : OUT    std_logic_vector(3 DOWNTO 0);
      Run         : OUT    std_logic;
      RunStatus   : IN     std_logic;
      leds        : OUT    std_logic_vector(1 DOWNTO 0);
      tri_pulse_A : OUT    std_logic;
      tri_pulse_B : OUT    std_logic;
      tri_pulse_C : OUT    std_logic;
      clk         : IN     std_logic
    );
  END COMPONENT tri_wrap;

  COMPONENT tri_wrap_tester
    PORT (
      Addr        : OUT    std_logic_vector(7 DOWNTO 0);
      Ctrl        : OUT    std_logic_vector(6 DOWNTO 0);
      Data_i      : IN     std_logic_vector(15 DOWNTO 0);
      Data_o      : OUT    std_logic_vector(15 DOWNTO 0);
      Status      : IN     std_logic_vector(3 DOWNTO 0);
      Run         : IN     std_logic;
      RunStatus   : OUT    std_logic;
      leds        : IN     std_logic_vector(1 DOWNTO 0);
      tri_pulse_A : IN     std_logic;
      tri_pulse_B : IN     std_logic;
      tri_pulse_C : IN     std_logic;
      clk_100MHz  : OUT    std_logic
    );
  END COMPONENT tri_wrap_tester;

  -- embedded configurations
  -- pragma synthesis_off
  FOR U_0 : tri_wrap USE ENTITY tripole_lib.tri_wrap;
  FOR U_1 : tri_wrap_tester USE ENTITY tripole_lib.tri_wrap_tester;
  -- pragma synthesis_on

BEGIN

    U_0 : tri_wrap
      PORT MAP (
        Addr        => Addr,
        Ctrl        => Ctrl,
        Data_i      => Data_i,
        Data_o      => Data_o,
        Status      => Status,
        Run         => Run,
        RunStatus   => RunStatus,
        leds        => leds,
        tri_pulse_A => tri_pulse_A,
        tri_pulse_B => tri_pulse_B,
        tri_pulse_C => tri_pulse_C,
        clk         => clk
      );

    U_1 : tri_wrap_tester
      PORT MAP (
        Addr        => Addr,
        Ctrl        => Ctrl,
        Data_i      => Data_i,
        Data_o      => Data_o,
        Status      => Status,
        Run         => Run,
        RunStatus   => RunStatus,
        leds        => leds,
        tri_pulse_A => tri_pulse_A,
        tri_pulse_B => tri_pulse_B,
        tri_pulse_C => tri_pulse_C,
        clk_100MHz  => clk
      );


END ARCHITECTURE rtl;