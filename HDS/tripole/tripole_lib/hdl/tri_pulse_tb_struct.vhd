-- VHDL Entity tripole_lib.tri_pulse_tb.symbol
--
-- Created:
--          by - nort.Domain Users (NORT-XPS14)
--          at - 13:29:08 08/09/16
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2013.1b (Build 2)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;



ENTITY tri_pulse_tb IS
-- Declarations

END tri_pulse_tb ;

--
-- VHDL Architecture tripole_lib.tri_pulse_tb.struct
--
-- Created:
--          by - nort.Domain Users (NORT-XPS14)
--          at - 15:04:47 08/09/16
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2013.1b (Build 2)
--

LIBRARY ieee;
USE ieee.std_logic_1164.ALL;
USE ieee.std_logic_arith.ALL;
USE ieee.std_logic_unsigned.ALL;

LIBRARY tripole_lib;

ARCHITECTURE struct OF tri_pulse_tb IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL CtrlEn     : std_logic;
   SIGNAL ExpReset   : std_logic;
   SIGNAL HiPerEn    : std_logic;
   SIGNAL PerEn      : std_logic;
   SIGNAL PhaseEn    : std_logic;
   SIGNAL RunOut     : std_logic;
   SIGNAL WData      : std_logic_vector(15 DOWNTO 0);
   SIGNAL WrEn       : std_logic;
   SIGNAL clk_100MHz : std_logic;
   SIGNAL pulse      : std_logic;
   SIGNAL tri_start  : std_logic;


   -- Component Declarations
   COMPONENT tri_period
   PORT (
      CtrlEn    : IN     std_logic ;
      PerEn     : IN     std_logic ;
      WData     : IN     std_logic_vector (15 DOWNTO 0);
      WrEn      : IN     std_logic ;
      clk       : IN     std_logic ;
      rst       : IN     std_logic ;
      RunOut    : OUT    std_logic ;
      tri_start : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT tri_pulse
   PORT (
      ExpReset   : IN     std_logic ;
      HiPerEn    : IN     std_logic ;
      PhaseEn    : IN     std_logic ;
      Run        : IN     std_logic ;
      WData      : IN     std_logic_vector (15 DOWNTO 0);
      WrEn       : IN     std_logic ;
      clk_100MHz : IN     std_logic ;
      tri_start  : IN     std_logic ;
      pulse      : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT tri_pulse_tester
   PORT (
      pulse      : IN     std_logic ;
      CtrlEn     : OUT    std_logic ;
      ExpReset   : OUT    std_logic ;
      HiPerEn    : OUT    std_logic ;
      PerEn      : OUT    std_logic ;
      PhaseEn    : OUT    std_logic ;
      WData      : OUT    std_logic_vector (15 DOWNTO 0);
      WrEn       : OUT    std_logic ;
      clk_100MHz : OUT    std_logic 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : tri_period USE ENTITY tripole_lib.tri_period;
   FOR ALL : tri_pulse USE ENTITY tripole_lib.tri_pulse;
   FOR ALL : tri_pulse_tester USE ENTITY tripole_lib.tri_pulse_tester;
   -- pragma synthesis_on


BEGIN

   -- Instance port mappings.
   U_2 : tri_period
      PORT MAP (
         CtrlEn    => CtrlEn,
         PerEn     => PerEn,
         WData     => WData,
         WrEn      => WrEn,
         clk       => clk_100MHz,
         rst       => ExpReset,
         RunOut    => RunOut,
         tri_start => tri_start
      );
   U_0 : tri_pulse
      PORT MAP (
         ExpReset   => ExpReset,
         HiPerEn    => HiPerEn,
         PhaseEn    => PhaseEn,
         Run        => RunOut,
         WData      => WData,
         WrEn       => WrEn,
         clk_100MHz => clk_100MHz,
         tri_start  => tri_start,
         pulse      => pulse
      );
   U_1 : tri_pulse_tester
      PORT MAP (
         pulse      => pulse,
         CtrlEn     => CtrlEn,
         ExpReset   => ExpReset,
         HiPerEn    => HiPerEn,
         PerEn      => PerEn,
         PhaseEn    => PhaseEn,
         WData      => WData,
         WrEn       => WrEn,
         clk_100MHz => clk_100MHz
      );

END struct;
